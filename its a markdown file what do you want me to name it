# _Data Science Project: Console Prices_

# Identifying and Defining

## Mind Map

![My Mindmap](images\mindmap.png)
* Blue were ideas considered for longer than others.

## Hypothesis

#### "Videogame console prices have risen accordingly with inflation, and are as fairly priced as they were 20 years ago."

This includes the following consoles:

| Playstation| Xbox | Nintendo |
|---|---|---|
|PS3 (2006)| Xbox 360 (2006) | Wii (2006) |
|PS4 (2013)| Xbox One (2013)| Wii U (2012) |
|PS5 (2020) | Xbox Series S (2020) | Switch (2017) |
|PS5 Pro (2024) | Xbox Series X (2020) | Switch 2 (2025) |

and also maybe the steam deck if I can be bothered.

## Requirements Outline

### Functional Requirements

* #### Loading
All relevant images or texts should be without error. In case of error, backup methods should be used. If those fail, make the error clear to the user and give the user direction to access data in other ways.

* ####  Cleaning
System should be able to function with minor values missing, with minimal disruption to user experience. Tools to filter or locate specific data will ideally be included.

* ####  Analysis
System should be able to provide analysis in the form of means, ranges and other useful tools, especially for comparison.

* #### Visualisation
Data should be visualised in a variety of pertinent ways, such as graphs, charts, dataframes and more. Particular focus should be given to the visualisation methods' accuracy compared to the spreadsheets.

(update this one with more specific knowledge when you know how to pandas and mpl)

* #### Outputs
Outputs should be in the form of showing the user's chosen visualisation, text representing specifically filtered data points, or easy access to the spreadsheets and datasets. Dataset will likely be stored in a .csv file.


### Non-Functional Requirements

* #### Usability
User interface should be easily navigable, understandable, and simple, whilst providing all neccesary information. A "README" document should be included to clarify what the data is, suggests, and any other necessary information. Data visualisation methods should have clarity.

* #### Reliability
System should be consistently able to access the same data with simple input, mentioned data should have and maintain integrity. System should handle errors without obfuscation, using backup processe(s) and detailed error messages to assist the user


### Use Case
__Actor:__ User

__Goal:__ To access and interact with existing data through the programâ€™s user interface.

__Preconditions:__

* The dataset has already been preloaded into the system by an administrator / programmer.

* The user has access to the system's interface.

__Main Flow:__

User opens the program and is presented with a text-based menu.

User is presented with the following options:
* a. See visualisation (Charts or graphs)
* b. Provide criteria to search or filter for data.
* c. Access the dataset for any reason (typically an update; though other reasons may exist.)

User selects one of the options and system performs the requested action and outputs to user.

__Postconditions:__

User has viewed and/or interacted with the data in any way they choose.

Updates are checked for and saved by the system (if valid).

Data remains available for further queries or analysis, maintaining  data integrity.



# Researching and Planning

### Research:
Below is a collection of links I used for research. I guess it's my sources? At least the ones for the paragraph.

### Discuss (SEE-I PAragraph)